// Code generated by MockGen. DO NOT EDIT.
// Source: app.go

// Package mock_app is a generated GoMock package.
package mock_app

import (
	context "context"
	app "github.com/James226/kafka-accumulator/accumulator/app"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProducer is a mock of Producer interface
type MockProducer struct {
	ctrl     *gomock.Controller
	recorder *MockProducerMockRecorder
}

// MockProducerMockRecorder is the mock recorder for MockProducer
type MockProducerMockRecorder struct {
	mock *MockProducer
}

// NewMockProducer creates a new mock instance
func NewMockProducer(ctrl *gomock.Controller) *MockProducer {
	mock := &MockProducer{ctrl: ctrl}
	mock.recorder = &MockProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProducer) EXPECT() *MockProducerMockRecorder {
	return m.recorder
}

// ReadMessage mocks base method
func (m *MockProducer) ReadMessage(ctx context.Context) (bool, app.DeltaMessage) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadMessage", ctx)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(app.DeltaMessage)
	return ret0, ret1
}

// ReadMessage indicates an expected call of ReadMessage
func (mr *MockProducerMockRecorder) ReadMessage(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadMessage", reflect.TypeOf((*MockProducer)(nil).ReadMessage), ctx)
}

// MockDeltaProcessor is a mock of DeltaProcessor interface
type MockDeltaProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockDeltaProcessorMockRecorder
}

// MockDeltaProcessorMockRecorder is the mock recorder for MockDeltaProcessor
type MockDeltaProcessorMockRecorder struct {
	mock *MockDeltaProcessor
}

// NewMockDeltaProcessor creates a new mock instance
func NewMockDeltaProcessor(ctrl *gomock.Controller) *MockDeltaProcessor {
	mock := &MockDeltaProcessor{ctrl: ctrl}
	mock.recorder = &MockDeltaProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeltaProcessor) EXPECT() *MockDeltaProcessorMockRecorder {
	return m.recorder
}

// Process mocks base method
func (m *MockDeltaProcessor) Process(ctx context.Context, message app.DeltaMessage) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Process", ctx, message)
}

// Process indicates an expected call of Process
func (mr *MockDeltaProcessorMockRecorder) Process(ctx, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockDeltaProcessor)(nil).Process), ctx, message)
}
